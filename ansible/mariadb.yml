---
- name: MariaDB Setup
  hosts: database_servers
  become: true
  vars:
    _PROJECT_DIR_: /home/user/flask-number-store
    mysql_root_password: root
    username: user
    user_password: password
    _APP_IP_: 192.168.86.22
  tasks:
    - name: Install dependencies and MariaDB
      apt: name={{ item }} update_cache=yes cache_valid_time=360
      loop:
        - python3-pymysql
        - mariadb-server

    - name: Set root user password
      # If .my.cnf already exists, this will cause an mysql-root-password update.
      mysql_user:
        name: root
        password: "{{ mysql_root_password}}"
        check_implicit_admin: true
        login_unix_socket: "/var/run/mysqld/mysqld.sock"

    - name: Create .my.cnf
      template:
        src: "templates/client.my.cnf.j2"
        dest: "/root/.my.cnf"
        owner: root
        group: root
        mode: 0600

    - name: Remove anonymous user account for localhost
      mysql_user:
        name: ''
        host: localhost
        state: absent
        login_unix_socket: "/var/run/mysqld/mysqld.sock"

    - name: Create user with name 'user' with all database privileges
      mysql_user:
        name: "{{ username }}"
        password: "{{ user_password }}"
        host: '%'
        priv: '*.*:ALL'
        state: present
        login_unix_socket: "/var/run/mysqld/mysqld.sock"

    - name: Delete 'test' database
      mysql_db:
        login_user: "{{ username }}"
        login_password: "{{ user_password }}"
        name: test
        state: absent

    - name: Create 'number_storage' database
      mysql_db:
        login_user: "{{ username }}"
        login_password: "{{ user_password }}"
        name: number_storage
        state: present

    - name: Collect all database files for the database IP update
      find:
        paths: "{{ _PROJECT_DIR_ }}/numSave/database/"
        patterns: "database.py"
      register: database_file

    - name: Replace application database connector file with database IP
      replace:
        path: "{{ item.path }}"
        regexp: "_DATABASE_IP_"
        replace: "{{ ansible_enp0s8.ipv4.address }}"
      loop: "{{ database_file.files }}"

    - name: Configure MariaDB to accept request from all IPs
      blockinfile:
        path: "/etc/mysql/my.cnf"
        block: |
          [mysqld]

          skip-networking=0
          skip-bind-address

    - name: Configure firewall to allow SQL requests
      community.general.ufw:
        from_ip: "{{ _IP_ }}"
        rule: allow
        proto: any
        to_port: 3306

    - name: Start mariadb service
      systemd:
        name: mariadb
        state: restarted
        enabled: yes